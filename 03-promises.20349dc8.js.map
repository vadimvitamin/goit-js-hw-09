{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA3CSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAKF,IAHA,IAAgCC,GAmBbC,EAnByBH,EAAEI,OAoBvC,CACLf,MAAOc,EAAQd,MAAMgB,cACrBC,KAAMH,EAAQG,KAAKD,cACnBE,OAAQJ,EAAQI,OAAOF,gBAvBjBG,EAAwBN,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAGZE,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAClBtB,EAAcsB,EAAI,EAAGD,EAAQC,EAAIH,GAE9CI,MAAK,SAAAC,GACJ,IAAQvB,EAAoBuB,EAApBvB,SAAUC,EAAUsB,EAAVtB,MAElBJ,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,GACL,IAAQvB,EAAoBuB,EAApBvB,SAAUC,EAAUsB,EAAVtB,MAElBJ,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAKlE,IAAqBc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = getFormData(e.target);\n\n  // console.log('promise', delay, step, amount);\n  for (let i = 0; i < amount; i += 1) {\n    const promise = createPromise(i + 1, delay + i * step);\n    promise\n      .then(result => {\n        const { position, delay } = result;\n\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(result => {\n        const { position, delay } = result;\n\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction getFormData(formRef) {\n  return {\n    delay: formRef.delay.valueAsNumber,\n    step: formRef.step.valueAsNumber,\n    amount: formRef.amount.valueAsNumber,\n  };\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","ref","formRef1","target","valueAsNumber","step","amount","delay1","i","then","result","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.20349dc8.js.map"}